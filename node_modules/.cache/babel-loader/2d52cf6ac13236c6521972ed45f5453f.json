{"ast":null,"code":"var _jsxFileName = \"/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/NewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createDeck, listDecks } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewDeck({\n  setDecks\n}) {\n  _s();\n\n  const blankData = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setFormData] = useState({\n    blankData\n  });\n\n  const handleChange = event => setFormData({ ...formData,\n    [event.target.name]: event.target.value\n  });\n\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await createDeck(formData);\n    const d = await listDecks();\n    setDecks(d);\n    setFormData({\n      blankData\n    });\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      crumbs: [{\n        link: null,\n        label: \"Create Deck\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"m-2 p-2\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"row\",\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"row w-100\",\n        name: \"name\",\n        id: \"name\",\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"row pt-4\",\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"row w-100\",\n        name: \"description\",\n        id: \"description\",\n        rows: \"8\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary mr-2\",\n          to: \"/\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewDeck, \"0SDqWk6z06fsIFp6lbnGrz5SHIg=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewDeck;\nexport default NewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewDeck\");","map":{"version":3,"sources":["/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/NewDeck.js"],"names":["React","Fragment","useState","Breadcrumbs","Link","useHistory","createDeck","listDecks","NewDeck","setDecks","blankData","name","description","formData","setFormData","handleChange","event","target","value","history","handleSubmit","preventDefault","d","push","link","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,oBAApC;;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA4B;AAAA;;AAC1B,QAAMC,SAAS,GAAG;AAACC,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,WAAW,EAAC;AAAtB,GAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AAACQ,IAAAA;AAAD,GAAD,CAAxC;;AACA,QAAMK,YAAY,GAAIC,KAAD,IAAUF,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,KAACG,KAAK,CAACC,MAAN,CAAaN,IAAd,GAAoBK,KAAK,CAACC,MAAN,CAAaC;AAA/C,GAAD,CAA1C;;AACA,QAAMC,OAAO,GAAGd,UAAU,EAA1B;;AACA,QAAMe,YAAY,GAAG,MAAOJ,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAMf,UAAU,CAACO,QAAD,CAAhB;AACA,UAAMS,CAAC,GAAG,MAAMf,SAAS,EAAzB;AACAE,IAAAA,QAAQ,CAACa,CAAD,CAAR;AACAR,IAAAA,WAAW,CAAC;AAACJ,MAAAA;AAAD,KAAD,CAAX;AACAS,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,GAPD;;AASA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAE,CAAC;AAACC,QAAAA,IAAI,EAAC,IAAN;AAAYC,QAAAA,KAAK,EAAC;AAAlB,OAAD;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEL,YAApC;AAAA,8BAEE;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,OAAO,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,EAAE,EAAC,MAA5C;AAAmD,QAAA,IAAI,EAAC,MAAxD;AACE,QAAA,QAAQ,EAAEL;AADZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAU,QAAA,SAAS,EAAC,WAApB;AAAgC,QAAA,IAAI,EAAC,aAArC;AAAmD,QAAA,EAAE,EAAC,aAAtD;AAAoE,QAAA,IAAI,EAAC,GAAzE;AACE,QAAA,QAAQ,EAAEA;AADZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAyC,UAAA,EAAE,EAAC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GArCQP,O;UAISH,U;;;KAJTG,O;AAuCT,eAAeA,OAAf","sourcesContent":["import React, {Fragment, useState} from \"react\"\nimport Breadcrumbs from \"./Breadcrumbs\"\nimport {Link, useHistory} from \"react-router-dom\"\nimport {createDeck, listDecks} from \"../utils/api/index\"\n\nfunction NewDeck({setDecks}){\n  const blankData = {name:\"\", description:\"\"}\n  const [formData, setFormData] = useState({blankData})\n  const handleChange = (event) =>setFormData({...formData, [event.target.name]:event.target.value})\n  const history = useHistory()\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    await createDeck(formData)\n    const d = await listDecks()\n    setDecks(d)\n    setFormData({blankData})\n    history.push(\"/\")\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs crumbs={[{link:null, label:\"Create Deck\"}] }/>\n       \n      <form className=\"m-2 p-2\" onSubmit={handleSubmit}>\n        {/*Name*/}\n        <label className=\"row\" htmlFor=\"name\">Name</label>\n        <input className=\"row w-100\" name=\"name\" id=\"name\" type=\"text\" \n          onChange={handleChange}></input>\n        {/*Description*/}\n        <label className=\"row pt-4\" htmlFor=\"description\">Description</label>\n        <textarea className=\"row w-100\" name=\"description\" id=\"description\" rows=\"8\" \n          onChange={handleChange}></textarea>\n        {/*Buttons*/}\n        <div className=\"row mt-4\">\n          <Link className=\"btn btn-secondary mr-2\" to=\"/\" >Cancel</Link>\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </Fragment>\n\n  )\n\n}\n\nexport default NewDeck"]},"metadata":{},"sourceType":"module"}