{"ast":null,"code":"var _jsxFileName = \"/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { listCards, readDeck } from \"../utils/api\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [cards, setCards] = useState([]);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [flip, setFlip] = useState(true); //true for front, false for back\n\n  const [myDeck, setMyDeck] = useState({});\n  useEffect(() => {\n    (async function () {\n      const d = await readDeck(deckId);\n      const c = await listCards(deckId);\n      setMyDeck(d);\n      setCards(c);\n    })();\n  }, []);\n  if (cards.length < 3) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      crumbs: [{\n        link: `/decks/${deckId}`,\n        label: myDeck.name\n      }, {\n        link: null,\n        label: \"Study\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Not enough cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need at least 3 cards to study. There are \", cards.length, \" cards in this deck.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deckId}/cards/new`,\n      className: \"btn btn-primary\",\n      children: \"+Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      crumbs: [{\n        link: `/decks/${deckId}`,\n        label: myDeck.name\n      }, {\n        link: null,\n        label: \"Study\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Study: \", myDeck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: cards.length > 0 ? `Card ${currentCardIndex + 1} of ${cards.length}` : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), cards.length > 0 && flip && cards[currentCardIndex].front, cards.length > 0 && !flip && cards[currentCardIndex].back]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mx-3\",\n          onClick: () => {\n            return setFlip(!flip);\n          },\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this),\n        /* Next Button */\n        !flip && currentCardIndex !== cards.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            setFlip(!flip);\n            setCurrentCardIndex(currentCardIndex + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this),\n        /* End Button */\n        !flip && currentCardIndex == cards.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            window.confirm(\"Restart?\") ? setCurrentCardIndex(0) : history.push(\"/\");\n          },\n          children: \"End\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Study, \"L5ij5aUki//90IZNbkjJ+QA1bUc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useEffect","useState","useParams","useHistory","Link","listCards","readDeck","Breadcrumbs","Study","deckId","history","cards","setCards","currentCardIndex","setCurrentCardIndex","flip","setFlip","myDeck","setMyDeck","d","c","length","link","label","name","front","back","window","confirm","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useParams, useHistory, Link } from \"react-router-dom\"\nimport { listCards, readDeck } from \"../utils/api\"\nimport Breadcrumbs from \"./Breadcrumbs\"\n\n\nfunction Study() {\n  const { deckId } = useParams()\n  const history = useHistory()\n  const [cards, setCards] = useState([])\n  const [currentCardIndex, setCurrentCardIndex] = useState(0)\n  const [flip, setFlip] = useState(true) //true for front, false for back\n  const [myDeck, setMyDeck] = useState({})\n\n  useEffect(() => {\n    (async function () {\n      const d = await readDeck(deckId)\n      const c = await listCards(deckId)\n      setMyDeck(d)\n      setCards(c)\n    })()\n\n  }, [])\n  \n  if (cards.length < 3)\n    return <div>\n            <Breadcrumbs crumbs={[{link:`/decks/${deckId}`, label:myDeck.name}, {link:null, label:\"Study\"}] }/>\n            <h4>Not enough cards</h4>\n            <p>You need at least 3 cards to study. There are {cards.length} cards in this deck.</p>\n            <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">+Add Cards</Link>\n          </div>\n\n  return (\n    <div>\n      <Breadcrumbs crumbs={[{link:`/decks/${deckId}`, label:myDeck.name}, {link:null, label:\"Study\"}] }/>\n      <h2>Study: {myDeck.name}</h2>\n      <div className=\"card p-3\">\n        <div className=\"card-title\">\n          <h6>{cards.length > 0 ? `Card ${currentCardIndex + 1} of ${cards.length}` : \"\"}</h6>\n          {cards.length > 0 && flip && cards[currentCardIndex].front}\n          {cards.length > 0 && !flip && cards[currentCardIndex].back}\n        </div>\n        <div className=\"row\">\n          {/* Flip Button */}\n          <button className=\"btn btn-secondary mx-3\" onClick={() => { return setFlip(!flip) }}>Flip</button>\n          {/* Next Button */\n            !flip && currentCardIndex !== cards.length - 1 &&\n            <button className=\"btn btn-secondary\" onClick={() => {\n              setFlip(!flip)\n              setCurrentCardIndex(currentCardIndex + 1)\n            }}>Next</button>\n          }\n\n          {/* End Button */\n            !flip && currentCardIndex == cards.length - 1 &&\n            <button className=\"btn btn-secondary\" onClick={() => {\n              window.confirm(\"Restart?\") ? setCurrentCardIndex(0) : history.push(\"/\")\n            }\n            }>End</button>\n          }\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Study"]},"metadata":{},"sourceType":"module"}