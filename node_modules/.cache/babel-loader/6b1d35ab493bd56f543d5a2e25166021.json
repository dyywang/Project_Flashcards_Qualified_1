{"ast":null,"code":"var _jsxFileName = \"/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddEditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard, createCard, listCards } from \"../utils/api\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddEditCard({\n  changer,\n  edit = true\n}) {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [deck, setDeck] = useState({});\n  const [cardNum, setCardNum] = useState(0);\n  const {\n    change,\n    setChange\n  } = changer;\n  const history = useHistory();\n\n  const handleChange = event => setCard({ ...card,\n    [event.target.name]: event.target.value\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (edit) {\n      await updateCard(card);\n    } else {\n      await createCard(deckId, card);\n    }\n\n    setChange(!change);\n    history.push(`/decks/${deckId}`);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const d = await readDeck(deckId);\n      const myCards = await listCards(deckId);\n      const c = cardId ? await readCard(cardId) : {\n        front: \"Front side of card\",\n        back: \"Back side of card\"\n      };\n      setDeck(d);\n      setCards(myCards);\n      setCard(c);\n      cardId ? setCardNum(myCards.findIndex(card => {\n        return card.id == cardId;\n      }) + 1) : setCardNum(myCards.length + 1);\n    })();\n  }, []);\n  const action = edit ? \"Edit Card\" : \"Create Card\";\n  const crumbs = [{\n    link: `/decks/${deckId}`,\n    label: deck.name\n  }, {\n    link: null,\n    label: action + \" \" + cardNum\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      crumbs: crumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"m-2 p-2\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"front\",\n        className: \"row\",\n        children: \"Front:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"row w-100\",\n        name: \"front\",\n        id: \"front\",\n        onChange: handleChange,\n        value: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"back\",\n        className: \"row pt-4\",\n        children: \"Back:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"row w-100\",\n        name: \"back\",\n        id: \"back\",\n        onChange: handleChange,\n        value: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-2\",\n          onClick: () => history.push(`/decks/${deckId}`),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditCard, \"So/PN7TPS5/dMpcURuDU5mMMOuI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddEditCard;\nexport default AddEditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditCard\");","map":{"version":3,"sources":["/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddEditCard.js"],"names":["React","useState","useEffect","useParams","useHistory","readCard","readDeck","updateCard","createCard","listCards","Breadcrumbs","AddEditCard","changer","edit","deckId","cardId","card","setCard","cards","setCards","deck","setDeck","cardNum","setCardNum","change","setChange","history","handleChange","event","target","name","value","handleSubmit","preventDefault","push","d","myCards","c","front","back","findIndex","id","length","action","crumbs","link","label"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from \"react\"\nimport {useParams, useHistory} from \"react-router-dom\"\nimport { readCard , readDeck, updateCard, createCard, listCards} from \"../utils/api\"\nimport Breadcrumbs from \"./Breadcrumbs\"\n\nfunction AddEditCard({changer, edit=true}) {\n  const {deckId, cardId} = useParams() \n  const [card, setCard] = useState({})\n  const [cards, setCards] = useState([])\n  const [deck, setDeck] = useState({})\n  const [cardNum, setCardNum] = useState(0)\n  const {change, setChange} = changer\n\n  const history = useHistory()\n  const handleChange = (event) => setCard({...card, [event.target.name]:event.target.value})\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (edit) {\n      await updateCard(card) }\n    else { await createCard(deckId, card) }\n    setChange(!change) \n    history.push(`/decks/${deckId}`)\n  }\n\n  useEffect( ()=>{\n    (async ()=>{ \n      const d = await readDeck(deckId)\n      const myCards = await listCards(deckId)\n      const c = cardId ? await readCard(cardId) : {front:\"Front side of card\", back:\"Back side of card\"}\n      setDeck(d)\n      setCards(myCards)\n      setCard(c)\n      cardId ? setCardNum( myCards.findIndex((card)=>{return card.id == cardId}) +1 ) : setCardNum(myCards.length + 1)\n    } )()  \n  }, [])\n\n  const action = edit ? \"Edit Card\"  : \"Create Card\"\n  const crumbs = [{link:`/decks/${deckId}`, label:deck.name}, {link:null, label:action+\" \"+cardNum}]\n\n  return (\n    <div>\n\n    <Breadcrumbs crumbs={crumbs}/>\n\n    <h4>{action}</h4>\n    <form className=\"m-2 p-2\" onSubmit={handleSubmit}>\n      <label htmlFor=\"front\" className=\"row\">Front:</label>\n      <textarea className=\"row w-100\" name=\"front\" id=\"front\" onChange={handleChange} value={card.front}></textarea>\n      \n      <label htmlFor=\"back\" className=\"row pt-4\">Back:</label>\n      <textarea className=\"row w-100\" name=\"back\" id=\"back\" onChange={handleChange} value={card.back}></textarea>\n      <div className=\"row mt-4\">\n        <button className=\"btn btn-secondary mr-2\" onClick={()=>history.push(`/decks/${deckId}`)}>Cancel</button>\n        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n      </div>\n    </form>\n  </div>\n  )\n\n  \n}\n\nexport default AddEditCard"]},"metadata":{},"sourceType":"module"}