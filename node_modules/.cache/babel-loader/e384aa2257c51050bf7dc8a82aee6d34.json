{"ast":null,"code":"var _jsxFileName = \"/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  changer\n}) {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const {\n    change,\n    setChange\n  } = changer;\n\n  const handleChange = event => setDeck({ ...deck,\n    [event.target.name]: event.target.value\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await updateDeck(deck);\n    setChange(!change);\n    history.push(`/decks/${deckId}`);\n  };\n\n  useEffect(() => {\n    (async () => {\n      readDeck(deckId).then(setDeck);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      crumbs: [{\n        link: `/decks/${deckId}`,\n        label: deck.name\n      }, {\n        link: null,\n        label: \"Edit Deck\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Edit Deck: \", deck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"m-2 p-2\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"row\",\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"row w-100\",\n        name: \"name\",\n        id: \"name\",\n        type: \"text\",\n        value: deck.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"row pt-4\",\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"row w-100\",\n        name: \"description\",\n        id: \"description\",\n        rows: \"8\",\n        value: deck.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary mr-2\",\n          to: \"/\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"TV4pvh0j/Fw6b+W60p6Nmsq+JAw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/dan/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.js"],"names":["React","useState","useEffect","useParams","useHistory","Link","readDeck","updateDeck","Breadcrumbs","EditDeck","changer","deck","setDeck","deckId","history","change","setChange","handleChange","event","target","name","value","handleSubmit","preventDefault","push","then","link","label","description"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {useParams, useHistory, Link} from \"react-router-dom\"\nimport { readDeck, updateDeck } from \"../utils/api\"\nimport Breadcrumbs from \"./Breadcrumbs\"\n\nfunction EditDeck({changer}){\n  const [deck, setDeck] = useState({})\n  const {deckId} = useParams()\n  const history = useHistory()\n  const {change, setChange} = changer\n  const handleChange = (event) => setDeck({...deck, [event.target.name]:event.target.value})\n  const handleSubmit = async (event) =>{\n    event.preventDefault()\n    await updateDeck(deck)\n    setChange(!change)\n    history.push(`/decks/${deckId}`)\n  }\n  \n  useEffect( ()=>{\n    (async ()=>{\n      readDeck(deckId)\n      .then(setDeck)\n    })()\n  }, [])\n\n  return (\n    \n    <div>\n     <Breadcrumbs crumbs={[{link:`/decks/${deckId}`, label:deck.name}, {link:null, label:\"Edit Deck\"}] } />\n      <h4>Edit Deck: {deck.name}</h4>\n      <form className=\"m-2 p-2\" onSubmit={handleSubmit}>\n        {/*Name*/}\n        <label className=\"row\" htmlFor=\"name\">Name</label>\n        <input className=\"row w-100\" name=\"name\" id=\"name\" type=\"text\" value={deck.name}\n          onChange={handleChange}></input>\n        {/*Description*/}\n        <label className=\"row pt-4\" htmlFor=\"description\">Description</label>\n        <textarea className=\"row w-100\" name=\"description\" id=\"description\" rows=\"8\" value={deck.description}\n          onChange={handleChange}></textarea>\n        {/*Buttons*/}\n        <div className=\"row mt-4\">\n          <Link className=\"btn btn-secondary mr-2\" to=\"/\" >Cancel</Link>\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditDeck"]},"metadata":{},"sourceType":"module"}